CREATE OR REPLACE PROCEDURE POS.PRO_OWNER_CONSUME_SAVE (
   P_CONSUMPTION_ID       VARCHAR2,
   P_EMPLOYEE_ID          VARCHAR2,
   P_MEMBER_ID            VARCHAR2,
   P_CONSUME_DATE         VARCHAR2,
   P_ITEM_ID              VARCHAR2,
   P_QUANTITY             VARCHAR2,
   P_PRICE                VARCHAR2,
   P_REMARKS              VARCHAR2,
   P_UPDATE_BY            VARCHAR2,
   P_MESSAGE          OUT VARCHAR2,
   P_MESSAGE_CODE     OUT VARCHAR2)
AS
   V_COUNT            NUMBER;
   V_CONSUMPTION_ID   NUMBER;
   V_PRICE            NUMBER;
BEGIN
   IF P_CONSUME_DATE IS NULL
   THEN
      P_MESSAGE_CODE := '0000';
      P_MESSAGE := 'PLEASE SELECT CONSUME DATE !!';
      RETURN;
   END IF;

   IF P_ITEM_ID IS NULL
   THEN
      P_MESSAGE_CODE := '0000';
      P_MESSAGE := 'PLEASE SELECT ITEM NAME !!';
      RETURN;
   END IF;

   IF P_QUANTITY IS NULL
   THEN
      P_MESSAGE_CODE := '0000';
      P_MESSAGE := 'PLEASE ENTER QUANTITY  !!';
      RETURN;
   END IF;


   BEGIN
      SELECT ITEM_PRICE * P_QUANTITY
        INTO V_PRICE
        FROM L_ITEM
       WHERE ITEM_ID = P_ITEM_ID;
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         V_PRICE := NULL;
   END;


   BEGIN
      IF P_CONSUMPTION_ID IS NOT NULL
      THEN
         SELECT COUNT (CONSUMPTION_ID)
           INTO V_COUNT
           FROM OWNER_FOOD_CONSUMPTION
          WHERE CONSUMPTION_ID = P_CONSUMPTION_ID;


         IF V_COUNT > 0
         THEN
            BEGIN
               UPDATE OWNER_FOOD_CONSUMPTION
                  SET CONSUME_DATE = TO_DATE (P_CONSUME_DATE, 'DD/MM/YYYY'),
                      ITEM_ID = P_ITEM_ID,
                      QUANTITY = P_QUANTITY,
                      PRICE = V_PRICE,
                      REMARKS = P_REMARKS,
                      UPDATE_BY = P_UPDATE_BY,
                      UPDATE_DATE = SYSDATE
                WHERE CONSUMPTION_ID = P_CONSUMPTION_ID;
            EXCEPTION
               WHEN OTHERS
               THEN
                  P_MESSAGE_CODE := '0000';
                  P_MESSAGE := 'ERROR UPDATING RECORD !!';
                  RETURN;
            END;

            P_MESSAGE_CODE := '1111';
            P_MESSAGE := 'UPDATE SUCCESSFULLY';
            RETURN;
         ELSE
            P_MESSAGE_CODE := '0000';
            P_MESSAGE := 'NO DATA FOUND TO UPDATE !!';
            RETURN;
         END IF;
      ELSE
         IF P_EMPLOYEE_ID IS NULL AND P_MEMBER_ID IS NULL
         THEN
            P_MESSAGE_CODE := '0000';
            P_MESSAGE := 'AT FIRST SELECT AN OWNER NAME OR MEMBER NAME  !!';
            RETURN;
         END IF;

         IF P_EMPLOYEE_ID IS NOT NULL AND P_MEMBER_ID IS NOT NULL
         THEN
            P_MESSAGE_CODE := '0000';
            P_MESSAGE :=
               'YOU CAN SELECT EITHER  OWNER NAME OR MEMBER NAME  !!';
            RETURN;
         END IF;



         SELECT TO_CHAR (SYSDATE, 'YYYYMMDD')
                || LPAD (SEQ_OWNER_CONSUME.NEXTVAL, 3, 0)
           INTO V_CONSUMPTION_ID
           FROM DUAL;

         BEGIN
            INSERT INTO OWNER_FOOD_CONSUMPTION (CONSUMPTION_ID,
                                                OWNER_ID,
                                                MEMBER_ID,
                                                CONSUME_DATE,
                                                ITEM_ID,
                                                QUANTITY,
                                                PRICE,
                                                REMARKS,
                                                UPDATE_BY,
                                                UPDATE_DATE)
                 VALUES (V_CONSUMPTION_ID,
                         P_EMPLOYEE_ID,
                         P_MEMBER_ID,
                         TO_DATE (P_CONSUME_DATE, 'DD/MM/YYYY'),
                         P_ITEM_ID,
                         P_QUANTITY,
                         V_PRICE,
                         P_REMARKS,
                         P_UPDATE_BY,
                         SYSDATE);
         EXCEPTION
            WHEN OTHERS
            THEN
               P_MESSAGE_CODE := '0000';
               P_MESSAGE := 'ERROR SAVING RECORD !!';
               RETURN;
         END;

         P_MESSAGE_CODE := '1111';
         P_MESSAGE := 'SAVE SUCCESSFULLY';
         RETURN;
      END IF;
   END;
END;
/