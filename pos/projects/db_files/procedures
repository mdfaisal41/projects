
CREATE OR REPLACE PROCEDURE POS.PRO_ITEM_CONFIG_SAVE (
   P_ENC_ITEM_ID    IN     VARCHAR2,
   P_ITEM_ID        IN     VARCHAR2,
   P_PRODUCT_ID     IN     VARCHAR2,
   P_QUANTITY       IN     VARCHAR2,
   P_UNIT_ID        IN     VARCHAR2,
   P_UPDATE_BY      IN     VARCHAR2,
   P_UPDATE_DATE       OUT VARCHAR2,
   P_MESSAGE           OUT VARCHAR2,
   P_MESSAGE_CODE      OUT VARCHAR2)
AS
   V_COUNT                NUMBER;
   V_ITEM_ID              NUMBER;
   V_QNT_FRACTION_VALUE   NUMBER;
   V_SMALL_UNIT           NUMBER;
BEGIN
   BEGIN
      IF P_PRODUCT_ID IS NULL
      THEN
         P_MESSAGE := 'PRODUCT IS REQUIRED !!';
         P_MESSAGE_CODE := '0000';
         RETURN;
      END IF;

      IF P_QUANTITY IS NULL
      THEN
         P_MESSAGE := 'QUANTITY IS REQUIRED !!';
         P_MESSAGE_CODE := '0000';
         RETURN;
      END IF;

      IF P_UNIT_ID IS NULL
      THEN
         P_MESSAGE := 'UNIT IS REQUIRED !!';
         P_MESSAGE_CODE := '0000';
         RETURN;
      END IF;

      BEGIN
         SELECT SMALL_UNIT
           INTO V_SMALL_UNIT
           FROM L_UNIT
          WHERE UNIT_ID = P_UNIT_ID;
      EXCEPTION
         WHEN NO_DATA_FOUND
         THEN
            P_MESSAGE := 'UNIT DETAILS NOT FOUND !!';
            P_MESSAGE_CODE := '0000';
            ROLLBACK;
            RETURN;
      END;


      V_QNT_FRACTION_VALUE := P_QUANTITY * V_SMALL_UNIT;



      IF P_ENC_ITEM_ID IS NOT NULL
      THEN
         BEGIN
            UPDATE ITEM_CONFIG
               SET QUANTITY = P_QUANTITY,
                   UNIT_ID = P_UNIT_ID,
                   UPDATE_BY = P_UPDATE_BY,
                   UPDATE_DATE = SYSDATE,
                   QNT_FRACTION_VALUE = V_QNT_FRACTION_VALUE
             WHERE ITEM_ID = P_ENC_ITEM_ID AND PRODUCT_ID = P_PRODUCT_ID;

            P_MESSAGE := 'ITEM CONFIGURATION UPDATE SUCCESSFULL';
            P_MESSAGE_CODE := '1111';
            RETURN;
         EXCEPTION
            WHEN OTHERS
            THEN
               P_MESSAGE :=
                  SQLERRM || ' ERROR UPDATING ITEM CONFIGURATION !!!';
               P_MESSAGE_CODE := '0000';
               ROLLBACK;
               RETURN;
         END;
      ELSE
         SELECT COUNT (ITEM_ID)
           INTO V_COUNT
           FROM ITEM_CONFIG
          WHERE ITEM_ID = P_ITEM_ID AND PRODUCT_ID = P_PRODUCT_ID;


         IF V_COUNT > 0
         THEN
            BEGIN
               UPDATE ITEM_CONFIG
                  SET QUANTITY = P_QUANTITY,
                      UNIT_ID = P_UNIT_ID,
                      UPDATE_BY = P_UPDATE_BY,
                      UPDATE_DATE = SYSDATE,
                      QNT_FRACTION_VALUE = V_QNT_FRACTION_VALUE
                WHERE ITEM_ID = P_ITEM_ID AND PRODUCT_ID = P_PRODUCT_ID;

               P_MESSAGE := 'ITEM CONFIGURATION UPDATE SUCCESSFULL';
               P_MESSAGE_CODE := '1111';
               RETURN;
            EXCEPTION
               WHEN OTHERS
               THEN
                  P_MESSAGE :=
                     SQLERRM || ' ERROR UPDATING ITEM CONFIGURATION !!!';
                  P_MESSAGE_CODE := '0000';
                  ROLLBACK;
                  RETURN;
            END;
         ELSE
            BEGIN
               INSERT INTO ITEM_CONFIG (ITEM_ID,
                                        PRODUCT_ID,
                                        QUANTITY,
                                        UNIT_ID,
                                        UPDATE_BY,
                                        UPDATE_DATE,
                                        QNT_FRACTION_VALUE)
                    VALUES (P_ITEM_ID,
                            P_PRODUCT_ID,
                            P_QUANTITY,
                            P_UNIT_ID,
                            P_UPDATE_BY,
                            SYSDATE,
                            V_QNT_FRACTION_VALUE);

               P_MESSAGE := 'ITEM CONFIGURATION SAVE SUCCESSFULL';
               P_MESSAGE_CODE := '1111';
               RETURN;
            EXCEPTION
               WHEN OTHERS
               THEN
                  P_MESSAGE :=
                     SQLERRM || ' ERROR SAVING ITEM CONFIGURATION !!!';
                  P_MESSAGE_CODE := '0000';
                  ROLLBACK;
                  RETURN;
            END;
         END IF;
      END IF;
   END;
END;
/